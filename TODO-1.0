- ~Clean-up the code~
  - ~Verisimilitude should be readable~
  - ~Sisyphus core should be readable~
- ~Handle prototypes correctly~
  - ~Recursive `eq` on Object.getPrototypeOf~

- Split out the reporter(s)
  - ~Simplified method-interceptor-based reporter interface~
  - ~Default reporters~ we have noop, debug (prints tests), and simple
  - Composeable reporters
    - Assertion-printing reporter composer (basically, 'debug' as a mixin)
    - Aggregating reporter composer
    - Time-profiling reporter composer
  - Reimplement stateful argument-displaying reporter (based on 'simple')
- ~Refactor so that `sisyphus` returns a harness (`t`), not a `suite`~
  - ~This will make the API more consistent between `suite` and `test`~
- Revisit documentation
  - Update README
  - Update other textual docs
  - Clean-up commentary in code

- Should we, actually? Hmm... probably not worth it.
  - Split verisimilitude (and assertions, generally) from core library
